{"ast":null,"code":"var _jsxFileName = \"/home/neeladrisekharrudra/Documents/Practise/React/todoapp/src/AddTodo.js\";\nimport React, { Component } from 'react';\nimport { ValidatorForm } from 'react-form-validator-core';\nimport TextValidator from './common/TextValidator';\n\nclass AddTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      error: \"\",\n      temporaryContent: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        id: Math.random(),\n        content: e.target.value,\n        temporaryContent: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      console.log(e.target.value);\n      e.preventDefault();\n      this.props.addTodo(this.state);\n      this.setState({\n        content: \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add New Todo\"), React.createElement(TextValidator, {\n      onChange: this.handleChange,\n      value: this.state.content,\n      validators: ['required'],\n      errorMessages: ['this field is required'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AddTodo;","map":{"version":3,"sources":["/home/neeladrisekharrudra/Documents/Practise/React/todoapp/src/AddTodo.js"],"names":["React","Component","ValidatorForm","TextValidator","AddTodo","state","content","error","temporaryContent","handleChange","e","setState","id","Math","random","target","value","handleSubmit","console","log","preventDefault","props","addTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,MAAMC,OAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,gBAAgB,EAAE;AAHZ,KADuB;;AAAA,SAO/BC,YAP+B,GAOfC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADQ;AAEZR,QAAAA,OAAO,EAAEI,CAAC,CAACK,MAAF,CAASC,KAFN;AAGZR,QAAAA,gBAAgB,EAAEE,CAAC,CAACK,MAAF,CAASC;AAHf,OAAd;AAKD,KAb8B;;AAAA,SAe/BC,YAf+B,GAefP,CAAD,IAAO;AACpBQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACK,MAAF,CAASC,KAArB;AACAN,MAAAA,CAAC,CAACU,cAAF;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKjB,KAAxB;AACA,WAAKM,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAtB8B;AAAA;;AAwB/BiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAC,MADN;AAEE,MAAA,QAAQ,EAAE,KAAKN,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKR,YADjB;AAEE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,OAFpB;AAGE,MAAA,UAAU,EAAE,CAAC,UAAD,CAHd;AAIE,MAAA,aAAa,EAAE,CAAC,wBAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAgBD;;AAzC8B;;AA4CjC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ValidatorForm } from 'react-form-validator-core';\nimport TextValidator from './common/TextValidator'\n\nclass AddTodo extends  Component {\n  state = {\n    content: \"\",\n    error: \"\",\n    temporaryContent: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      id: Math.random(),\n      content: e.target.value,\n      temporaryContent: e.target.value,\n    })\n  };\n\n  handleSubmit = (e) => {\n    console.log(e.target.value);\n    e.preventDefault();\n    this.props.addTodo(this.state);\n    this.setState({\n      content: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n        >\n          <label>Add New Todo</label>\n          <TextValidator\n            onChange={this.handleChange}\n            value={this.state.content}\n            validators={['required']}\n            errorMessages={['this field is required']}\n          />\n        </ValidatorForm>\n      </div>\n    )\n  }\n}\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}