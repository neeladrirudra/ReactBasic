{"ast":null,"code":"var _jsxFileName = \"/home/neeladrisekharrudra/Documents/Practise/React/todoapp/src/AddTodo.js\";\nimport React, { Component } from 'react';\n\nclass AddTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      error: \"\"\n    };\n\n    this.handleChange = e => {\n      const todos = this.props.todos;\n      let sameTodo = false;\n      todos.forEach(v => {\n        if (v.content === e.target.value) {\n          sameTodo = true;\n        }\n      });\n\n      if (sameTodo) {\n        this.setState({\n          error: \"Todo already in queue\"\n        });\n      } else {\n        this.setState({\n          id: Math.random(),\n          content: e.target.value,\n          error: \"\"\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.addTodo(this.state);\n      this.setState({\n        content: \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Add New Todo\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.error)));\n  }\n\n}\n\nexport default AddTodo;","map":{"version":3,"sources":["/home/neeladrisekharrudra/Documents/Practise/React/todoapp/src/AddTodo.js"],"names":["React","Component","AddTodo","state","content","error","handleChange","e","todos","props","sameTodo","forEach","v","target","value","setState","id","Math","random","handleSubmit","preventDefault","addTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BE,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,KAAK,EAAE;AAFD,KADuB;;AAAA,SAM/BC,YAN+B,GAMfC,CAAD,IAAO;AACpB,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACA,UAAIE,QAAQ,GAAG,KAAf;AAEAF,MAAAA,KAAK,CAACG,OAAN,CAAeC,CAAD,IAAO;AACnB,YAAIA,CAAC,CAACR,OAAF,KAAcG,CAAC,CAACM,MAAF,CAASC,KAA3B,EAAkC;AAChCJ,UAAAA,QAAQ,GAAG,IAAX;AACD;AACF,OAJD;;AAMA,UAAIA,QAAJ,EAAc;AACZ,aAAKK,QAAL,CAAc;AACZV,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAJD,MAIO;AACL,aAAKU,QAAL,CAAc;AACZC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADQ;AAEZd,UAAAA,OAAO,EAAEG,CAAC,CAACM,MAAF,CAASC,KAFN;AAGZT,UAAAA,KAAK,EAAE;AAHK,SAAd;AAKD;AACF,KA3B8B;;AAAA,SA6B/Bc,YA7B+B,GA6BfZ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACa,cAAF;AACA,WAAKX,KAAL,CAAWY,OAAX,CAAmB,KAAKlB,KAAxB;AACA,WAAKY,QAAL,CAAc;AACZX,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAnC8B;AAAA;;AAqC/BkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKb,YAAlC;AAAgD,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,KAAK,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKD,KAAL,CAAWE,KAA5B,CAHF,CADF,CADF;AASD;;AA/C8B;;AAkDjC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass AddTodo extends  Component {\n  state = {\n    content: \"\",\n    error: \"\",\n  };\n\n  handleChange = (e) => {\n    const todos = this.props.todos;\n    let sameTodo = false;\n\n    todos.forEach((v) => {\n      if (v.content === e.target.value) {\n        sameTodo = true;\n      }\n    });\n\n    if (sameTodo) {\n      this.setState({\n        error: \"Todo already in queue\",\n      });\n    } else {\n      this.setState({\n        id: Math.random(),\n        content: e.target.value,\n        error: \"\",\n      });\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state);\n    this.setState({\n      content: \"\",\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>Add New Todo</label>\n          <input type=\"text\" onChange={this.handleChange} value={this.state.content}/>\n          <div style={{}}>{this.state.error}</div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}